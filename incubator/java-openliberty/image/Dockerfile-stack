FROM adoptopenjdk/openjdk8-openj9:ubi
USER root

# TODO - need to get all of these run commands
# compacted down to a single RUN command 
RUN  yum --verbose --disableplugin=subscription-manager check-update; exit 0

ARG MAVEN_VERSION="3.6.3"
ARG USER_HOME_DIR="/root"
ARG SHA="c35a1803a6e70a126e80b2b3ae33eed961f83ed74d18fcd16909b2d44d7dada3203f1ffe726c17ef8dcca2dcaa9fca676987befeadc9b9f759967a8cb77181c0"
ARG BASE_URL="https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries"

RUN mkdir -p /usr/share/maven \
    && curl -Lso  /tmp/maven.tar.gz ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz \
    && echo "${SHA}  /tmp/maven.tar.gz" | sha512sum -c - \
    && tar -xzC /usr/share/maven --strip-components=1 -f /tmp/maven.tar.gz \
    && rm -v /tmp/maven.tar.gz \
    && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn

ENV MAVEN_HOME /usr/share/maven
ENV MAVEN_CONFIG "${USER_HOME_DIR}/.m2"


RUN  yum -y --disableplugin=subscription-manager install curl wget
#  Need the following to allow the install of xmlstarlet
RUN  yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm && \
     yum -y --disableplugin=subscription-manager install xmlstarlet && \
#  Needed to add this because a best fit was not available 
     yum -y --nobest update && \
     yum clean packages
#  Need to verify if this is still needed since we are using 
#  yum instead of apt-get
RUN rm -rf /tmp/* /var/lib/apt/lists/*

COPY ./LICENSE /licenses/
COPY ./project /project
COPY ./config /config

RUN  /project/util/check_version build

WORKDIR /project/

RUN mkdir -p /mvn/repository
RUN mvn -B -Dmaven.repo.local=/mvn/repository -N io.takari:maven:wrapper -Dmaven=$(mvn help:evaluate -Dexpression=maven.version -q -DforceStdout)
RUN mvn -B -Pstack-image-package -Dmaven.repo.local=/mvn/repository liberty:install-server liberty:create install dependency:go-offline
RUN chmod -R 777 /opt/ol


WORKDIR /project/user-app

ENV APPSODY_MOUNTS="~/.m2/repository:/mvn/repository;.:/project/user-app"

ENV APPSODY_WATCH_DIR=/project/user-app
ENV APPSODY_WATCH_IGNORE_DIR=/project/user-app/target

# Work around v3.1 issues with dev mode reacting to pom.xml change but should eventually not require this.
ENV APPSODY_WATCH_REGEX="^pom\.xml$"

ENV APPSODY_USER_RUN_AS_LOCAL=true

# Set APPSODY_DEV_MODE to get in the habit in case we need it someday
ENV APPSODY_PREP="export APPSODY_DEV_MODE=prep;  ../validate.sh"

ENV APPSODY_RUN="export APPSODY_DEV_MODE=run; mvn -B -Pstack-image-run -DappsDirectory=apps -Dmaven.repo.local=/mvn/repository liberty:dev"
# See ENV APPSODY_WATCH_REGEX comment
ENV APPSODY_RUN_ON_CHANGE="export APPSODY_DEV_MODE=run; ../validate.sh && mvn -Pstack-image-run -DappsDirectory=apps -Dmaven.repo.local=/mvn/repository liberty:dev"
ENV APPSODY_RUN_KILL=true

ENV APPSODY_DEBUG="export APPSODY_DEV_MODE=debug; mvn -B -Pstack-image-run -DappsDirectory=apps -Dmaven.repo.local=/mvn/repository liberty:dev"
# See ENV APPSODY_WATCH_REGEX comment
ENV APPSODY_DEBUG_ON_CHANGE="export APPSODY_DEV_MODE=debug; ../validate.sh && mvn -Pstack-image-run -DappsDirectory=apps -Dmaven.repo.local=/mvn/repository liberty:dev"
ENV APPSODY_DEBUG_KILL=true

ENV APPSODY_TEST="export APPSODY_DEV_MODE=test; exec mvn -B -Pstack-image-run -DappsDirectory=apps -Dmaven.repo.local=/mvn/repository clean package liberty:create liberty:install-feature liberty:start liberty:deploy failsafe:integration-test@it-exec liberty:stop failsafe:verify"
ENV APPSODY_TEST_ON_CHANGE=""
ENV APPSODY_TEST_KILL=true

ENV PORT=9080

EXPOSE 9080
EXPOSE 9443
EXPOSE 7777
